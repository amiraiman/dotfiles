" General Config
set nocompatible                                " incompatible with vi
filetype indent plugin on                       " filetype detection, indentation, and plugin
set encoding=utf-8
set exrc
set hidden                                      " Allow buffers to be hidden and not deleted
set autoread
set noerrorbells                                " No error bells when error
set ignorecase                                  " Ignore case when searching
set smartcase                                   " Auto detect case when searching
set noswapfile
set nobackup
set nowritebackup
set undofile                                    " Maintain undo history between sessions
set undodir=~/.vim/undodir                      " Where to store undo sessions file
set scrolloff=8                                 " Line limit to start scrolling
set updatetime=300
set shortmess+=c
set foldenable                                  " Enable folding
set foldmethod=manual                           " Type of folding
set foldlevelstart=10                           " Open most fold by default
set foldnestmax=10                              " Avoid too many nested fold
set foldcolumn=2

" Editor Interface
set number                                      " show line number
set relativenumber                              " show relative number
set nohls                                       " no highlight search matches
set hls                                         " highlight search matches
set incsearch                                   " incremental highlight on search
set termguicolors                               " use guibg and guifg
set signcolumn=yes                              " Add gutter beside line number
set colorcolumn=80                              " Show 80 width character
set cursorline                                  " Show cursorline
set cursorcolumn                                " Show cursorcolumn
set noshowmode                                  " no need to show current mode
set showcmd                                     " show incomplete command at bottom
set cmdheight=2                                 " Increase command height
set splitright                                  " Always split to the right
set splitbelow                                  " Always split to the bottom
set wildmenu                                    " Show tab completion menu
set laststatus=2                                " Show status line

" Editor text
syntax enable                                   " enable syntax highlighting
set nowrap                                      " dont wrap text
set tabstop=2                                   " set tab to 2 space
set softtabstop=2                               " delete whole indent when backspace
set shiftwidth=0 	                            " set < / > indent to follow tabstop
set expandtab 		                            " switch tab to spaces
set autoindent                                  " auto indent next line to the same indentation as current line
set smartindent                                 " try to auto indent automatically

" Packages
packadd minpac
packadd dracula                                 " issue #140 on dracula github
" Init minpac
call minpac#init()
command! PackUpdate call minpac#update()
command! PackClean call minpac#clean()
" Add Packages
call minpac#add('k-takata/minpac', {'type': 'opt'})
call minpac#add('dracula/vim', {'name': 'dracula'})
call minpac#add('sheerun/vim-polyglot')
call minpac#add('preservim/nerdcommenter')
call minpac#add('tpope/vim-vinegar')
call minpac#add('jiangmiao/auto-pairs')
call minpac#add('neoclide/coc.nvim', {'branch': 'release'})
call minpac#add('vim-airline/vim-airline')
call minpac#add('vim-airline/vim-airline-themes')
call minpac#add('edkolev/tmuxline.vim')
call minpac#add('tpope/vim-fugitive')
call minpac#add('mattn/emmet-vim')

let mapleader=" "
" Package settings & mappings
" FZF
set rtp+=~/.fzf
nnoremap <silent> <C-p> :<C-u>FZF<CR>
" Netrw
nnoremap <silent> <C-n> :<C-u>Vex<CR>
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_winsize = 15
" NERDCommenter
let g:NERDCreateDefaultMappings = 1
let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
let g:NERDCommentEmptyLines = 1
let g:NERDDefaultAlign = 'left'
map <C-_> <Leader>c<Space>
imap <C-_> <Esc><Leader>c<Space>la
" Airline
let g:airline_powerline_fonts = 1
let g:airline_theme='molokai'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#branch#enabled = 1
" Coc
" Tab to trigger completion and navigate ahead
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction
" C-space to trigger completion
if has('nvim')
  inoremap <silent><expr> <c-space> coc#refresh()
else
  inoremap <silent><expr> <c-@> coc#refresh()
endif
" Use <CR> auto select the first selection
inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
" Goto definition
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
" Format range
vmap <leader>f  <Plug>(coc-format-selected)
nmap <leader>f  <Plug>(coc-format-selected)

" Mappings
" Clear search highlight
nnoremap <silent> <leader>/ :<C-u>noh<CR>
" Save with leader
nnoremap <silent> <leader>w :<C-u>w<CR>
nnoremap <silent> <leader>s :<C-u>noa w<CR>
" Use dot in visual mode
vnoremap <silent> . :normal .<CR>
" Move lines in visual mode
vnoremap <silent> J :m '>+1<CR>gv=gv
vnoremap <silent> K :m '<-2<CR>gv=gv
" Splits
nnoremap <C-j> <C-w><C-j>
nnoremap <C-h> <C-w><C-h>
nnoremap <C-k> <C-w><C-k>
nnoremap <C-l> <C-w><C-l>
" Tabs
nnoremap <silent> <leader>tl :<C-u>tabn<CR>
nnoremap <silent> <leader>th :<C-u>tabp<CR>
nnoremap <leader>tt :<C-u>tabedit<Space>
nnoremap <silent> <leader>td :<C-u>tabclose<CR>
nnoremap <silent> <leader>tn :<C-u>tabnew<CR>
" Buffers
nnoremap <silent> <leader>bl :<C-u>bnext<CR>
nnoremap <silent> <leader>bh :<C-u>bprev<CR>
nnoremap <leader>bb :<C-u>e<Space>
nnoremap <silent> <leader>bd :<C-u>bd!<CR>
nnoremap <silent> <leader>bn :<C-u>enew<CR>

xnoremap :node :!node %

"Autocmd
autocmd BufNewFile *.html 0r ~/.vim/templates/html.tpl
autocmd BufNewFile,BufRead *.ejs setfiletype html

" Themes
set t_Co=256
colorscheme dracula 
set background=dark
hi Normal guibg=NONE ctermbg=NONE 
